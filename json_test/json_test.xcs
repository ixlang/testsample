require("FileInputStream.xcs")

String readJson(){
    try{
    
        FileInputStream fis = new FileInputStream("ast.json");
        byte[] data = fis.read(); 
        return new String(data);
        
    }catch(Exception e){
        _system_.consoleWrite("打开文件:" + "ast.json" + "错误\n");
    }
    
    return nilptr;
}

JsonObject createJson(){
    JsonObject json = new JsonObject();
    json.put("age", 18);
    json.put("name", "x");
    json.put("weight", 65.31);
    
    JsonArray arr = new JsonArray();

    arr.put("x1");
    arr.put("x2");
    arr.put("x3");
    arr.put(6);
    
    JsonArray arr_cld = new JsonArray();
    
    try{
        arr_cld.put(true);
        arr_cld.put(33.333333);
        arr_cld.put("xx1");
        arr_cld.put("xx2");
        arr_cld.put("xx3");
        arr_cld.put(6);
        arr.put(arr_cld);
        arr_cld.put(arr);
    }catch(Exception e){
        _system_.consoleWrite("#[CircularReference error]#\n");
    }finally{
        json.put("chd", arr);
    }
    
    return json;
}


int main(String [] args){
    _system_.createConsole();

    String  s = readJson();
   
    if (s == nilptr){
        Thread.sleep(1000);
        return -1;
    }
    JsonObject root = new JsonObject(s);
    
    JsonObject child = (JsonObject)root.child();
    
    _system_.consoleWrite("" + root.getInt("type") + "\n");
    
    JsonArray arr = root.getArray("child");
    
    _system_.consoleWrite("" + arr.length() + "\n");
    
    for (int i = 0, c =arr.length(); i < c; i++ ){
        _system_.consoleWrite("" + ((JsonObject)arr.get(i)).toString(true) + "\n");
    }
    
    JsonObject js = createJson();
    _system_.consoleWrite("" + js.toString(true) + "\n");
    
    Thread.sleep(1000);
    return 100;
}

