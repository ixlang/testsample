
//冒泡排序
 void bubbleSort(@NotNilptr int[] a){
    bool flag = true;
    for (int i = 0; i < a.length-1&&flag; i++) {
        flag = false;
        for (int j = 0; j < a.length-i-1; j++) {
            if(a[j]>a[j+1]){
                int temp = a[j];
                a[j] = a[j+1];
                a[j+1] = temp;
                flag = true;
            }
        }
    }
}

//快速排序
void quickSort(@NotNilptr int[] a){
    quickSort(a, 0, a.length-1);
}

void quickSort(int[] a, int left, int right){
    if(left < right){
        int index = getSortIndex(a, left, right);
        quickSort(a, left, index-1);
        quickSort(a, index+1, right);
    }
}

int getSortIndex(int[] a, int left, int right){
    int temp = a[left];
    while(left<right){
        while(left < right && a[right]>=temp){
            right--;
        }
        a[left] = a[right];
        while(left < right && a[left] <= temp){
            left++;
        }
        a[right] = a[left];
    }
    a[left] = temp;
    return left;
}

    
int main(String [] args){
    _system_.createConsole();
    _system_.consoleWrite(new String("10000次冒泡/快速排序\n".getBytes("GB18030")));
    
    
    
    long start = _system_.currentTimeMillis();
    
    for (int i = 0; i < 10000; i++){
        int [] t = {5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46,5,2,5,4,-100,25,76,-10,-100,46};
        bubbleSort(t);
        //quickSort(t);
    }
    long end = _system_.currentTimeMillis();
    
    /*for (int i =0; i < t.length; i++){
        //_system_.consoleWrite("" + t[i] + "\n");
    }*/
    
    _system_.consoleWrite("length:" + 80 + "time:" +(end - start) + "\n");
    
    Thread.sleep(1000);
    
    return 0;
}