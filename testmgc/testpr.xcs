//xlang 
package System{
	public class out{
		public static int println(String text){
                    if (text == nilptr){
                text = "nilptr";
            }
			return _system_.consoleWrite(text + "\n");
		}
		public static int print(String text){            if (text == nilptr){
                text = "nilptr";
            }
			return _system_.consoleWrite(text);
		}
	};
	
	public class Console{
		public Console(){
			_system_.createConsole();
		}
	};
};


using { System; };

class XObject{ int v = 0;	public XObject(int _v){v = _v;}};

class XList<_Type>{
	static class XNode<_NodeType>{
		public XNode(){
		}
        
		public XNode(_NodeType m){
			_My = m;
		}
        
		_NodeType _My;
        public XNode<_NodeType> prev, next;
        
        public void link(@NotNilptr XNode<_NodeType> tm){
			tm.next = next;
            next.prev = tm;
			next = tm;
            tm.prev = this;
        }
    };
    
    XNode<_Type> head , end;
    int length;
    
    public XList(){ 
        head = end = new XNode<_Type> ();
		end.prev = head;
     }
    
    public void push(_Type t){
		XNode<_Type> curren = new XNode<_Type>(t);
        if (head == end){
			head = curren;
            head.next = end;
            end.prev = head;
        }else{	end.prev.link(curren);  }
        length++;
    }
};

void ptest(){
	XList<XObject> lint = new XList<XObject>();
	for (int i = 0; i < 1000000; i ++){		lint.push(new XObject(i));    }
}

int main(String [] args){
	new Console();

	while (true){
		ptest();
        //long begin = _system_.currentTimeMillis();
        /*_system_.gc();
        begin = (_system_.currentTimeMillis() - begin);
        System.out.println("" + begin + "ms\n");*/
    }
    
	Thread.sleep(-1);

	return 0;
}
