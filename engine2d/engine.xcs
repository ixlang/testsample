import "VULibrary.dll"{
    long stdcall AllocParam();
    void stdcall DeallocParam(long h);
    int stdcall OffsetParamGetType(long hParam);
    double stdcall GetInitialvelocity(long hParam);
    double stdcall GetAcceleration(long hParam);
    int stdcall GetnTime(long hParam);
    int stdcall GetfAngle(long hParam);
    int stdcall GetfWeight(long hParam);
    void stdcall SetType(long hParam, int nType);
    void stdcall SetInitialvelocity(long hParam, double fInitialvelocity);
    void stdcall SetAcceleration(long hParam, double fAcceleration);
    void stdcall SetTime(long hParam, double nTime);
    void stdcall SetfAngle(long hParam, double fAngle);
    void stdcall SetfWeight(long hParam, double fWeight);
    long stdcall AllocMsg();
    void stdcall DeallocMsg(long hMsg);
    long stdcall MsgGetHwnd(long hMsg);
    long stdcall MsgGetMessage(long hMsg);
    long stdcall MsgGetwParam(long hMsg);
    long stdcall MsgGetlParam(long hMsg);
    long stdcall MsgGettime(long hMsg);
    long stdcall MsgGetPoint(long hMsg);
    void stdcall MsgSetHwnd(long hMsg, long hWnd);
    void stdcall MsgSetMessage(long hMsg, long message);
    void stdcall MsgSetwParam(long hMsg, long wParam);
    void stdcall MsgSetlParam(long hMsg, long lParam);
    void stdcall MsgSettime(long hMsg, long time);
    void stdcall MsgSetPoint(long hMsg, long point);
    void stdcall MsgSetData(long hMsg, long hWnd, long nMsg, long wParam, long lParam, long nTime, double x, double y);
    long stdcall AllocPoint();
    void stdcall DeallocPoint(long hPoint);
    double stdcall PointGetXValue( long hPoint);
    double stdcall PointGetYValue( long hPoint);
    void stdcall PointSetValue( long hPoint, double x, double y);
    void stdcall PointOffset__JFF( long hPoint, double cx, double cy);
    void stdcall PointOffset__JJ( long hPoint, long hrPoint);
    long stdcall AllocRect();
    void stdcall DeallocRect( long hRect);
    double stdcall RectGetLeft( long hRect);
    double stdcall RectGetTop( long hRect);
    double stdcall RectGetRight( long hRect);
    double stdcall RectGetBottom( long hRect);
    void stdcall RectSetData( long hRect, double l, double t, double r, double b);
    long stdcall AllocSize();
    void stdcall DeallocSize( long hSize);
    double stdcall SizeGetCx( long hSize);
    double stdcall SizeGetCy( long hSize);
    void stdcall SizeSetData( long hSize, double cx, double cy);
    long stdcall GetNewDevice();
    void stdcall ReleaseDevice(long hDevice);
    double stdcall GetZoom(long hDevice);
    int stdcall SetZoom(long hDevice, double fZoom);
    int stdcall SetBackColor(long hDevice, int nColor);
    int stdcall SetQualityMode(long hDevice, int);
    int stdcall GetQualityMode(long hDevice);
    int stdcall SetClientSize__JJ(long hDevice, long size);
    int stdcall SetClientSize__JII(long hDevice, int w, int h);
    long stdcall GetClientSize(long hDevice);
    int stdcall SetDrawMode(long hDevice, int);
    bool stdcall InitDevice(long hDevice, long pEnv);
    long stdcall MessageCall(long hDevice, int, long, long);
    int stdcall DCTranslateMessage(long hDevice, long);
    int stdcall ExitDevice(long hDevice);
    int stdcall DCSetTimer(long hDevice, int nEventid, int TimeInterval);
    long stdcall DCCreateThread(long hDevice, long, long);
    bool stdcall DCKillTimer(long hDevice, int nEventID);
    int stdcall GetMapRect(long hDevice, long lpRect);
    int stdcall UpdateDisplay(long hDevice);
    int stdcall BeginRender(long hDevice);
    int stdcall EndRender(long hDevice);
    int stdcall PrepareDevice(long hDevice);
    int stdcall SetTopMost(long hDevice);
    long stdcall CreateLock(long hDevice);
    long stdcall GetWindowHandle(long hDevice);
    long stdcall ImageFromResource( long hDevice, long mod, int id, String szFile);
    long stdcall ImageFromMemory(long hDevice, long pData, int nLen);
    long stdcall ImageFromFile( long hDevice, String szFile);
    long stdcall ImageFromObjectHandle(long hDevice, long);
    long stdcall GetImageSize(long hDevice, long hImage);
    void stdcall ReleaseImage(long hDevice, long hImage);
    void stdcall ReleaseText(long hDevice, long);
    int stdcall DCDrawText(long hDevice, long, String, long, long, int, int, int, int, double, long);
    int stdcall DrawImage(long hDevice, long hImage, long pt, long size, int trans, double rotate, long rpt, long srcpt, long srcsize);
    String stdcall GetText(long hDevice, long);
    int stdcall SetText(long hDevice, long, String);
    long stdcall GetTextSize(long hDevice, long);
    long stdcall GetStringScales(long hDevice, long, String, long);
    void stdcall SetClip(long hDevice, double, double, double, double, int);
    void stdcall ClearClip(long hDevice);
    int stdcall MsgCallback(long hDevice, int message, long wParam, long lParam, long time, double x, double y);
    int stdcall UpdateDeviceProperty(long hDevice);
    long stdcall CreateTextObject(long hDevice, String, int, int, String, int, int, int, int, int, long, long, long, long);
    bool stdcall NativeTranslateMessage( ObjectPtr buffer_j);
    long stdcall AllocObjectFromScenes(long scenes);
    long stdcall AllocObjectFromDevice(long device);
    void stdcall DeallocObject(long hObject);
    double stdcall GetAngleOf__JJ(long hObject, long hrObjct);
    double stdcall GetAngleOf__JFF(long hObject, double x, double y);
    double stdcall GetManhattanDistanceOf__JJ(long hObject, long hrObjct);
    double stdcall GetManhattanDistanceOf__JFF(long hObject, double x, double y);
    void stdcall SetCurrentFrame(long hObject, long nFrame);
    long stdcall GetObjectSize(long hObject);
    long stdcall GetObjectPoint(long hObject);
    void stdcall SetObjectPoint(long hObject, double x, double y);
    void stdcall SetObjectSize(long hObject, double cx, double cy);
    bool stdcall OBSetTextAlign(long hObject, long nAlign);
    bool stdcall OBGetTextAlign(long hObject);
    void stdcall SetSingleLine(long hObject, bool bSingleline);
    bool stdcall GetSingleLine(long hObject);
    long stdcall OBGetTextSize(long hObject);
    long stdcall GetAnimationObject(long hObject);
    long stdcall GetTextRect(long hObject);
    bool stdcall SetAutoTextRect(long hObject, bool bAuto);
    bool stdcall GetAutoTextRect(long hObject);
    void stdcall SetTextRect(long hObject, long size);
    bool stdcall OBTranslateMessage(long hObject, long scenes, long msg);
    bool stdcall bOffsetOK(long hObject);
    long stdcall GetSize(long hObject);
    long stdcall GetImagePoint(long hObject);
    void stdcall SetTextSize(long hObject, long nSize);
    void stdcall SetText__JL_lang_String_2(long hObject, String szText);
    void stdcall SetImageRotation(long hObject, double frotate, long pt);
    double stdcall GetImageRotation(long hObject, long point);
    long stdcall GetImageRotationPoint(long hObject);
    void stdcall SetTextRotation(long hObject, double frotate, long pt);
    double stdcall GetTextRotation(long hObject, long pt);
    long stdcall GetTextRotationPoint(long hObject);
    void stdcall SetOffsetParam(long hObject, long param);
    long stdcall GetOffsetParam(long hObject);
    bool stdcall SetText__JL_lang_String_lang_String(long hObject, String szText, long pt, long wh, bool singleline, String facename, long color, long fontSize);
    bool stdcall SetFont(long hObject, String szFont, long color,long height, long width, long weight, bool bItalic, long charset, long rect);
    bool stdcall SetFontColor(long hObject, long color);
    long stdcall OBGetImageSize(long hObject);
    bool stdcall SetImage_lang_String_2JJJ(long hObject, String szFile, long pt, long size, long trans);
    bool stdcall SetImage__JJJJJ(long hObject, long handle, long pt, long size, long trans);
    bool stdcall SetImage__lang_String_2JJJJ(long hObject, long module, String resource, long id, long pt, long size, long trans);
    bool stdcall SetImageLink(long hObject, long link, long pt, long size, long dpt, long dsize);
    bool stdcall SetImage__JJJJJJ(long hObject, long lpData, long nlen, long pt, long size, long trans);
    bool stdcall SetImage__J_3IJJJJJJ(long hObject, ObjectPtr arrayBody, int theArrayLengthJ, long width, long height, long nFormat, long pt, long size, long trans);
    void stdcall SetTransparent(long hObject, long trans);
    long stdcall GetTransparent(long hObject);
    void stdcall SetTextTransparent(long hObject, long trans);
    long stdcall GetTextTransparent(long hObject);
    void stdcall SetImageSize(long hObject, double cx, double cy);
    void stdcall SetImagePoint(long hObject, double x, double y);
    void stdcall SetDestSize(long hObject, double cx, double cy);
    void stdcall SetDestPoint(long hObject, double x, double y);
    void stdcall SetTextPoint(long hObject, double x, double y);
    void stdcall SetDestTxtPoint(long hObject, double x, double y);
    void stdcall SetDestTxtSize(long hObject, long n);
    bool stdcall GetAnimationPause(long hObject);
    bool stdcall SetAnimationPause(long hObject, bool bPause);
    long stdcall GetTextPoint(long hObject);
    long stdcall InScenesRef(long hObject);
    bool stdcall HasImage(long hObject);
    bool stdcall HasText(long hObject);
    bool stdcall HasLink(long hObject);
    bool stdcall SetVisible(long hObject, bool bVisible);
    bool stdcall GetVisible(long hObject);
    long stdcall HasAnimation(long hObject);
    bool stdcall IsLinkFrom(long hObject, long obj);
    long stdcall GetImage(long hObject);
    long stdcall GetAllLinkRect(long hObject);
    long stdcall RemoveFrame__JI(long hObject, int nframe);
    bool stdcall RemoveFrame__JJ(long hObject, long obj);
    long stdcall GetObjectRect(long hObject);
    long stdcall GetFrameObject(long hObject, long nFrame);
    long stdcall GetObjectFrame(long hObject, long obj);
    long stdcall AddFrame__JJJ(long hObject, long pFrame, long nBefore);
    long stdcall AddFrame_lang_String_2JJJ(long hObject, String szfile, long pt, long size, long trans);
    long stdcall AddFrame_lang_String_2JJJJ(long hObject, long module, String resource, long id, long pt, long size, long trans);
    long stdcall AddFrame__JJJJJJJ(long hObject, long obj, long pt, long size, long dpt, long dsize, long trans);
    long stdcall GetCurrentFrame(long hObject);
    long stdcall GotoFrame(long hObject, long nFrame);
    bool stdcall NextFrame(long hObject);
    long stdcall GetCurrentFrameObject(long hObject);
    bool stdcall SetFrameTime(long hObject, long nFrame);
    long stdcall GetFrameTime(long hObject);
    long stdcall GetFrameCount(long hObject);
    bool stdcall SetScenes(long hObject, long scenes);
    bool stdcall SetHitTest(long hObject, long flags);
    bool stdcall ResetHit(long hObject);
    long stdcall GetHitTest(long hObject);
    void stdcall SetTag(long hObject, long pTag);
    long stdcall GetTag(long hObject);
    String stdcall OBGetText(long hObject);
    String stdcall GetFontName(long hObject);
    long stdcall GetFontColor(long hObject);
    long stdcall GetEventHandler(long hObject);
    void stdcall SetEventHandler(long hObject, long pevent);
    bool stdcall ClearHitTestFlags(long hObject);
    bool stdcall RemoveHitTestFlags(long hObject, long flags);
    bool stdcall SetHitTestFlags(long hObject, long flags);
    bool stdcall ClearHitTest(long hObject);
    bool stdcall RemoveHitTest(long hObject, long flags);
    bool stdcall HasHitTestFlags(long hObject, long flags);
    long stdcall GetTextObject(long hObject);
    bool stdcall TextSingle(long hObject);
    void stdcall SetLinkInfo(long hObject, long pt, long size);
    long stdcall GetLinkInfo(long hObject);
    long stdcall GetLinkSize(long hObject);
    void stdcall Release(long hObject);
    long stdcall OBGetTextColor(long hObject);
    bool stdcall HitTest(long hObject, double x, double y);
    void stdcall ClearAction(long hObject, int flags);
    void stdcall EnableAction(long hObject, int flags, bool bEnable);
    void stdcall SetActionFrequency(long hObject, int flags, double fFrequency);
    bool stdcall TransparentObject(long hScenes, long object, long transparent, bool bForce);
    bool stdcall EnableEvent(long hScenes, long object, bool bEnable);
    long stdcall GetCurrentOffsetQuality(long hScenes, long object);
    bool stdcall SetDefaultOffsetQuality(long hScenes, long nSteps);
    bool stdcall BeginRenderNaked(long hScenes);
    void stdcall RenderNaked(long hScenes);
    bool stdcall EndRenderNaked(long hScenes);
    bool stdcall RotateObject(long hScenes, long object, double angle, bool bForce);
    long stdcall AllocScenes();
    void stdcall DeallocScenes(long hScenes);
    double stdcall SCGetZoom(long hScenes);
    bool stdcall SCSetZoom(long hScenes, double fZoom);
    long stdcall GetEventFlags(long hScenes);
    long stdcall SetEventFlags(long hScenes, long nFlags);
    void stdcall EnableDetectHitTest(long hScenes, bool bEnable);
    bool stdcall IsDetectHitTestEnabled(long hScenes);
    long stdcall GetFocusObject(long hScenes);
    long stdcall GetMouseOverObject(long hScenes);
    bool stdcall HasObject(long hScenes, long hObject);
    void stdcall SetObjectFocus(long hScenes, long hObject);
    int stdcall GetObjectIndex(long hScenes, long hObject);
    void stdcall SetObjectMouseOver(long hScenes, long hObject);
    void stdcall Uninit(long hScenes);
    bool stdcall SetPlatformContext(long hScenes, long hDevice);
    long stdcall GetPlatformContext(long hScenes);
    long stdcall SCGetWindowHandle(long hScenes);
    bool stdcall DrawObject(long hScenes, long hObject);
    bool stdcall SCSetBackColor(long hScenes, long nColor);
    bool stdcall MoveLast(long hScenes, long hObject);
    bool stdcall MoveFirst(long hScenes, long hObject);
    bool stdcall MoveFront(long hScenes, long hObject);
    bool stdcall MoveBack(long hScenes, long hObject);
    long stdcall GetObjectPointer(long hScenes, long point, bool bChkVisable);
    bool stdcall SetGdjObjectInterface(long hScenes, long hEvent);
    bool stdcall ChangeSizeObject(long hScenes, long hObject, double cx, double cy, bool bForce);
    void stdcall SetSynchronization(long hScenes, bool bSync);
    bool stdcall GetSynchronization(long hScenes);
    long stdcall SCSetDrawMode(long hScenes, long nMode);
    long stdcall GetDrawMode(long hScenes);
    bool stdcall SCSetQualityMode(long hScenes, long nMode);
    long stdcall SCGetQualityMode(long hScenes);
    bool stdcall OffsetObject__JJFFZ(long hScenes, long hObject, double cx, double cy, bool bForce);
    bool stdcall OffsetObject__JJFIJZ(long hScenes, long hObject, double fAngle, int nDistance, long rcLimit, bool bForce);
    bool stdcall OffsetObject__JJFIZ(long hScenes, long hObject, double fAngle, int nDistance, bool bForce);
    bool stdcall OffsetObjectImage(long hScenes, long hObject, double x, double y, bool bForce);
    bool stdcall OffsetObjectText(long hScenes, long hObject, double x, double y, bool bForce);
    bool stdcall Clear(long hScenes);
    void stdcall SetWindowSize(long hScenes, double width, double height);
    bool stdcall SCDeleteObject(long hScenes, long hObject);
    bool stdcall RemoveObject(long hScenes, long hObject);
    double stdcall GetHeight(long hScenes);
    double stdcall GetWidth(long hScenes);
    long stdcall AddObject_lang_String_2JJJJ(long hScenes, long hModule, String strResourceName, long nCID, long pt, long pSize, long trans);
    long stdcall AddObject_lang_String_2JJJ(long hScenes, String szFile, long pt, long pSize, long nTrans);
    long stdcall AddObject__JJJJJ(long hScenes, long handle, long pt, long size, long trans);
    long stdcall AddObject_lang_String_lang_String_2JIJ(long hScenes, String szText, long pt, long szRect, bool bSingleLine, String faceName, long color, int nSize, long nTrans);
    long stdcall AddObject__JJJJJJJ(long hScenes, long pImageLink, long ScrPT, long nScrSize, long pt, long nSize, long trans);
    long stdcall AddObject__JJJJJJ(long hScenes, long lpData, long nlen, long pt, long size, long trans);
    long stdcall GetNewObject__JJJJJJ(long hScenes, long lpData, long nlen, long pt, long size, long trans);
    long stdcall GetNewObject_lang_String_2JJJJ(long hScenes, long hModule, String strResourceName, long nCID, long pt, long pSize, long trans);
    long stdcall GetNewObject_lang_String_2JJJ(long hScenes, String szFile, long pt, long pSize, long nTrans);
    long stdcall GetNewObject__JL_lang_String_2JJZL_lang_String_2JIJ(long hScenes, String szText, long pt, long szRect, bool bSingleLine, String faceName, long color, int nSize, long nTrans);
    long stdcall GetNewObject__JJJJJJJ(long hScenes, long pImageLink, long ScrPT, long nScrSize, long pt, long nSize, long trans);
    bool stdcall AddObject__JJ(long hScenes, long hObject);
    long stdcall AddObject__J_3IJJJJJJ(long hScenes, ObjectPtr arrayBody, int theArrayLengthJ, long width, long height, long nFormat, long pt, long size, long trans);
    long stdcall GetNewObject__J_3IJJJJJJ(long hScenes, ObjectPtr arrayBody, int theArrayLengthJ, long width, long height, long nFormat, long pt, long size, long trans);
    bool stdcall SCUpdateDisplay(long hScenes);
    bool stdcall Render__JI(long hScenes, int nTransparent);
    bool stdcall Render__J(long hScenes);
    long stdcall SCGetTransparent(long hScenes);
    void stdcall SCSetTransparent(long hScenes, long nTransparent);
    bool stdcall ChangeSizeObjectText(long hScenes, long hObject, double cx, double cy, bool bForce);
    void stdcall DetectHit__J(long hScenes);
    bool stdcall DetectHit__JJJJ(long hScenes, long hScrObject, long hDstObject, long rc);
    bool stdcall ChangeSizeObjectImage(long hScenes, long hObject, double cx, double cy, bool bForce);
    bool stdcall ObjectInPlug(long hScenes, long hObject);
    bool stdcall MoveFrontOf(long hScenes, long hMoved, long hRefObject);
    bool stdcall MoveBackOf(long hScenes, long hMoved, long hRefObject);
    void stdcall ThreadUnlock(long hScenes);
    void stdcall ThreadLock(long hScenes);
    void stdcall SetScreenPoint(long hScenes, long hPoint);
    long stdcall OffsetScreen(long hScenes, int cx, int cy);
    long stdcall GetScreenOffset(long hScenes);
    bool stdcall SCTranslateMessage(long hScenes, long hMsg);
    long stdcall ClientToScreenPoint(long hScenes, long hPoint);
    long stdcall ScreenToClientPoint(long hScenes, long hPoint);
    long stdcall ClientToScreenRect(long hScenes, long hRect);
    long stdcall ScreenToClientRect(long hScenes, long hRect);
    long stdcall GetVUObjectRect(long hScenes, long hObject);
    void stdcall SendUpdateDisplay(long hScenes, long wParam, long lParam);
    bool stdcall DeviceMsgCallback(long hScenes, long hMsg);
    double stdcall GetInitialVelocity(long hScenes, double fAcceleration, double fDistance, double fTime);
    double stdcall SCGetAcceleration(long hScenes, double fInitialVelocity, double fDistance, double fTime);
    double stdcall GetDistance(long hScenes, double fInitialVelocity, double fAcceleration, double fTime);
    double stdcall GetStraightDistance(long hScenes, long p1, long p2);
    int stdcall GetObjectCount(long hScenes);
    bool stdcall GetPhysEffectEnabled(long hScenes);
    bool stdcall SetWorldRhythm(long hScenes, int setpOnSecond);
    void stdcall EnablePhysEffect(long hScenes, bool bEnabled);
    void stdcall SCEnableAction(long hScenes, int flags, bool bEnabled);
    void stdcall SCSetActionFrequency(long hScenes, int flags, double fFrequency);
	long stdcall getIVLViewFrame(int type, long handle);
	bool stdcall VFCreate(long frame, int type, long handle);
	bool stdcall PointerDown(long frame, long pt, int flags);
	bool stdcall PointerUp(long frame, long pt, int flags);
	bool stdcall PointerMove(long frame, long pt, int flags);
	void stdcall onKeyDown(long frame, int nChar, int rep, int flags);
	void stdcall onKeyUp(long frame, int nChar, int rep, int flags);
	bool stdcall VFTranslateMessage(long frame, long msg);
	long stdcall SetViewLayout(long frame, long layout);
	long stdcall SetViewLayout_JJJJJZ(long frame, long layout, int loadMethod, int unloadMethod, int loadTime, bool bNewLayoutFront);
	void stdcall SetDefaultLoadLayoutMethod(long frame, int loadMethod, int unloadMethod, int loadTime, bool bNewLayoutFront);
	bool stdcall OnBack(long frame);
	bool stdcall IsCurrentLayout(long frame, long layout);
	long stdcall GetCurrentVULayout(long frame);
	void stdcall Detach(long frame);
	void stdcall Render(long frame);
	void stdcall RequestRender(long frame);
	int stdcall SetRenderMode(long frame, int _mode);
	bool stdcall LayoutCreateed(long frame);
	void stdcall VFRelease(long frame);
	bool stdcall UpdateViewSize(long frame, double w, double h);
	long stdcall VFGetPlatformContext(long frame);

};